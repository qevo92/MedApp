//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MedApp.Models
{
    using System;
    using System.Collections.Generic;
    using Prism.Mvvm;
    using System.ComponentModel;
    public partial class Visiting : BindableBase
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Visiting()
        {
            this.Diagnosis = new HashSet<Diagnosis>();
            this.Medicament = new HashSet<Medicament>();
        }
    
        private int  _Id;
        public int Id 
        { 
           get
           {
              return _Id;
           } 
           set
           {
              if(_Id != value)
              {
                _Id = value;
                RaisePropertyChanged("Id");
              }
           }
        }
     
        private int  _IDEmployee;
        public int IDEmployee 
        { 
           get
           {
              return _IDEmployee;
           } 
           set
           {
              if(_IDEmployee != value)
              {
                _IDEmployee = value;
                RaisePropertyChanged("IDEmployee");
              }
           }
        }
     
        private int  _IDMedRecord;
        public int IDMedRecord 
        { 
           get
           {
              return _IDMedRecord;
           } 
           set
           {
              if(_IDMedRecord != value)
              {
                _IDMedRecord = value;
                RaisePropertyChanged("IDMedRecord");
              }
           }
        }
     
        private System.DateTime  _Date;
        public System.DateTime Date 
        { 
           get
           {
              return _Date;
           } 
           set
           {
              if(_Date != value)
              {
                _Date = value;
                RaisePropertyChanged("Date");
              }
           }
        }
     
        private string  _Complaints;
        public string Complaints 
        { 
           get
           {
              return _Complaints;
           } 
           set
           {
              if(_Complaints != value)
              {
                _Complaints = value;
                RaisePropertyChanged("Complaints");
              }
           }
        }
     
        private System.DateTime  _StartDisease;
        public System.DateTime StartDisease 
        { 
           get
           {
              return _StartDisease;
           } 
           set
           {
              if(_StartDisease != value)
              {
                _StartDisease = value;
                RaisePropertyChanged("StartDisease");
              }
           }
        }
     
        private string  _StatePraesens;
        public string StatePraesens 
        { 
           get
           {
              return _StatePraesens;
           } 
           set
           {
              if(_StatePraesens != value)
              {
                _StatePraesens = value;
                RaisePropertyChanged("StatePraesens");
              }
           }
        }
     
        private string  _Additionally;
        public string Additionally 
        { 
           get
           {
              return _Additionally;
           } 
           set
           {
              if(_Additionally != value)
              {
                _Additionally = value;
                RaisePropertyChanged("Additionally");
              }
           }
        }
     
    
        private Employee _Employee;
        public virtual Employee Employee 
        { 
          get
          {
              return _Employee;
          } 
          set
          {
             if(_Employee != value)
             {
                _Employee = value;
                RaisePropertyChanged("Employee");
             }
          }
        }
     
        private MedRecord _MedRecord;
        public virtual MedRecord MedRecord 
        { 
          get
          {
              return _MedRecord;
          } 
          set
          {
             if(_MedRecord != value)
             {
                _MedRecord = value;
                RaisePropertyChanged("MedRecord");
             }
          }
        }
     
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<Diagnosis> _Diagnosis;
        public virtual ICollection<Diagnosis> Diagnosis 
        { 
          get
          {
              return _Diagnosis;
          } 
          set
          {
             if(_Diagnosis != value)
             {
                _Diagnosis = value;
                RaisePropertyChanged("Diagnosis");
             }
          }
        }
     
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<Medicament> _Medicament;
        public virtual ICollection<Medicament> Medicament 
        { 
          get
          {
              return _Medicament;
          } 
          set
          {
             if(_Medicament != value)
             {
                _Medicament = value;
                RaisePropertyChanged("Medicament");
             }
          }
        }
     
    }
}
