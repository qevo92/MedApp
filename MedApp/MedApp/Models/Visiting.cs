//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MedApp.Models
{
    using System;
    using System.Collections.Generic;
    using Prism.Mvvm;
    using System.ComponentModel;
    public partial class Visiting : BindableBase, IEditableObject, IDataErrorInfo
    {
        private int  _Id;
        public int Id 
        { 
           get
           {
              return _Id;
           } 
           set
           {
              if(_Id != value)
              {
                _Id = value;
                RaisePropertyChanged("Id");
              }
           }
        }
     
        private int  _IDEmployee;
        public int IDEmployee 
        { 
           get
           {
              return _IDEmployee;
           } 
           set
           {
              if(_IDEmployee != value)
              {
                _IDEmployee = value;
                RaisePropertyChanged("IDEmployee");
              }
           }
        }
     
        private int  _IDMedRecord;
        public int IDMedRecord 
        { 
           get
           {
              return _IDMedRecord;
           } 
           set
           {
              if(_IDMedRecord != value)
              {
                _IDMedRecord = value;
                RaisePropertyChanged("IDMedRecord");
              }
           }
        }
     
        private int  _IDDiagnosis;
        public int IDDiagnosis 
        { 
           get
           {
              return _IDDiagnosis;
           } 
           set
           {
              if(_IDDiagnosis != value)
              {
                _IDDiagnosis = value;
                RaisePropertyChanged("IDDiagnosis");
              }
           }
        }
     
        private int  _IDMedicament;
        public int IDMedicament 
        { 
           get
           {
              return _IDMedicament;
           } 
           set
           {
              if(_IDMedicament != value)
              {
                _IDMedicament = value;
                RaisePropertyChanged("IDMedicament");
              }
           }
        }
     
        private System.DateTime  _Date;
        public System.DateTime Date 
        { 
           get
           {
              return _Date;
           } 
           set
           {
              if(_Date != value)
              {
                _Date = value;
                RaisePropertyChanged("Date");
              }
           }
        }
     
        private string  _Complaints;
        public string Complaints 
        { 
           get
           {
              return _Complaints;
           } 
           set
           {
              if(_Complaints != value)
              {
                _Complaints = value;
                RaisePropertyChanged("Complaints");
              }
           }
        }
     
        private System.DateTime  _StartDisease;
        public System.DateTime StartDisease 
        { 
           get
           {
              return _StartDisease;
           } 
           set
           {
              if(_StartDisease != value)
              {
                _StartDisease = value;
                RaisePropertyChanged("StartDisease");
              }
           }
        }
     
        private string  _StatePraesens;
        public string StatePraesens 
        { 
           get
           {
              return _StatePraesens;
           } 
           set
           {
              if(_StatePraesens != value)
              {
                _StatePraesens = value;
                RaisePropertyChanged("StatePraesens");
              }
           }
        }
     
        private string  _Additionally;
        public string Additionally 
        { 
           get
           {
              return _Additionally;
           } 
           set
           {
              if(_Additionally != value)
              {
                _Additionally = value;
                RaisePropertyChanged("Additionally");
              }
           }
        }
     
    
        private Diagnosis _Diagnosis;
        public virtual Diagnosis Diagnosis 
        { 
          get
          {
              return _Diagnosis;
          } 
          set
          {
             if(_Diagnosis != value)
             {
                _Diagnosis = value;
                RaisePropertyChanged("Diagnosis");
             }
          }
        }
     
        private Employee _Employee;
        public virtual Employee Employee 
        { 
          get
          {
              return _Employee;
          } 
          set
          {
             if(_Employee != value)
             {
                _Employee = value;
                RaisePropertyChanged("Employee");
             }
          }
        }
     
        private Medicament _Medicament;
        public virtual Medicament Medicament 
        { 
          get
          {
              return _Medicament;
          } 
          set
          {
             if(_Medicament != value)
             {
                _Medicament = value;
                RaisePropertyChanged("Medicament");
             }
          }
        }
     
        private MedRecord _MedRecord;
        public virtual MedRecord MedRecord 
        { 
          get
          {
              return _MedRecord;
          } 
          set
          {
             if(_MedRecord != value)
             {
                _MedRecord = value;
                RaisePropertyChanged("MedRecord");
             }
          }
        }

        public string Error => throw new NotImplementedException();

        public string this[string columnName]
        {
            get
            {
                string result = null;
                if (columnName == "IDEmployee")
                {
                    if (IDEmployee == 0)
                        result = "Данная строка не может быть пустой";
                }
                if (columnName == "IDMedRecord")
                {
                    if (IDMedRecord == 0)
                        result = "Данная строка не может быть пустой";
                }
                if (columnName == "Date")
                {
                    if (Date == null)
                        result = "Данная строка не может быть пустой";
                }
                if (columnName == "Complaints")
                {
                    if (Complaints == "" || Complaints == null)
                        result = "Данная строка не может быть пустой";
                }
                if (columnName == "StartDisease")
                {
                    if (StartDisease == null)
                        result = "Данная строка не может быть пустой";
                }
                if (columnName == "StatePraesens")
                {
                    if (StatePraesens == "" || StatePraesens == null)
                        result = "Данная строка не может быть пустой";
                }
                if (columnName == "Additionally")
                {
                    if (Additionally == "" || Additionally == null)
                        result = "Данная строка не может быть пустой";
                }
                return result;
            }
        }

        private Visiting _tempValues;
        public void BeginEdit()
        {
            _tempValues = new Visiting
            {
                Id = this.Id,
                IDEmployee = this.IDEmployee,
                IDMedRecord = this.IDMedRecord,
                IDDiagnosis = this.IDDiagnosis,
                IDMedicament = this.IDMedicament,
                Date = this.Date,
                Complaints = this.Complaints,
                StartDisease = this.StartDisease,
                StatePraesens = this.StatePraesens,
                Additionally = this.Additionally
            };
        }

        public void EndEdit()
        {
            _tempValues = null;
        }

        public void CancelEdit()
        {
            if (_tempValues == null) return;

            this.Id = _tempValues.Id;
            this.IDEmployee = _tempValues.IDEmployee;
            this.IDMedRecord = _tempValues.IDMedRecord;
            this.IDDiagnosis = _tempValues.IDDiagnosis;
            this.IDMedicament = _tempValues.IDMedicament;
            this.Date = _tempValues.Date;
            this.Complaints = _tempValues.Complaints;
            this.StartDisease = _tempValues.StartDisease;
            this.StatePraesens = _tempValues.StatePraesens;
            this.Additionally = _tempValues.Additionally;
        }
    }
}
