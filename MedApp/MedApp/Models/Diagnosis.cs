//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MedApp.Models
{
    using System;
    using System.Collections.Generic;
    using Prism.Mvvm;
    using System.ComponentModel;
    public partial class Diagnosis : BindableBase, IEditableObject, IDataErrorInfo
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Diagnosis()
        {
            this.Visiting = new HashSet<Visiting>();
        }
    
        private int  _Id;
        public int Id 
        { 
           get
           {
              return _Id;
           } 
           set
           {
              if(_Id != value)
              {
                _Id = value;
                RaisePropertyChanged("Id");
              }
           }
        }
     
        private string  _Key;
        public string Key 
        { 
           get
           {
              return _Key;
           } 
           set
           {
              if(_Key != value)
              {
                _Key = value;
                RaisePropertyChanged("Key");
              }
           }
        }
     
        private string  _Name;
        public string Name 
        { 
           get
           {
              return _Name;
           } 
           set
           {
              if(_Name != value)
              {
                _Name = value;
                RaisePropertyChanged("Name");
              }
           }
        }
     
        private string  _Description;
        public string Description 
        { 
           get
           {
              return _Description;
           } 
           set
           {
              if(_Description != value)
              {
                _Description = value;
                RaisePropertyChanged("Description");
              }
           }
        }
     
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<Visiting> _Visiting;
        public virtual ICollection<Visiting> Visiting 
        { 
          get
          {
              return _Visiting;
          } 
          set
          {
             if(_Visiting != value)
             {
                _Visiting = value;
                RaisePropertyChanged("Visiting");
             }
          }
        }

        public string Error => throw new NotImplementedException();

        public string this[string columnName]
        {
            get
            {
                string result = null;
                if (columnName == "Key")
                {
                    if (Key == null)
                        result = "Данная строка не может быть пустой";
                }
                if (columnName == "Name")
                {
                    if (Name == null)
                        result = "Данная строка не может быть пустой";
                }
                if (columnName == "Description")
                {
                    if (Description == "" || Description == null)
                        result = "Данная строка не может быть пустой";
                }
                return result;
            }
        }

        private Diagnosis _tempValues;
        public void BeginEdit()
        {
            _tempValues = new Diagnosis
            {
                Id = this.Id,
                Key = this.Key,
                Name = this.Name,
                Description = this.Description,
            };
        }

        public void EndEdit()
        {
            _tempValues = null;
        }

        public void CancelEdit()
        {
            if (_tempValues == null) return;

            this.Id = _tempValues.Id;
            this.Key = _tempValues.Key;
            this.Name = _tempValues.Name;
            this.Description = _tempValues.Description;
        }
    }
}
