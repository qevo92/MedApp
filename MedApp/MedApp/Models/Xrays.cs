//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MedApp.Models
{
    using System;
    using System.Collections.Generic;
    using Prism.Mvvm;
    using System.ComponentModel;
    public partial class Xrays : BindableBase,IEditableObject, IDataErrorInfo
    {
        private int  _Id;
        public int Id 
        { 
           get
           {
              return _Id;
           } 
           set
           {
              if(_Id != value)
              {
                _Id = value;
                RaisePropertyChanged("Id");
              }
           }
        }
     
        private byte[]  _Photo;
        public byte[] Photo 
        { 
           get
           {
              return _Photo;
           } 
           set
           {
              if(_Photo != value)
              {
                _Photo = value;
                RaisePropertyChanged("Photo");
              }
           }
        }
     
        private System.DateTime  _Date;
        public System.DateTime Date 
        { 
           get
           {
              return _Date;
           } 
           set
           {
              if(_Date != value)
              {
                _Date = value;
                RaisePropertyChanged("Date");
              }
           }
        }
     
        private string  _Description;
        public string Description 
        { 
           get
           {
              return _Description;
           } 
           set
           {
              if(_Description != value)
              {
                _Description = value;
                RaisePropertyChanged("Description");
              }
           }
        }
     
        private int  _IdMedRecord;
        public int IdMedRecord 
        { 
           get
           {
              return _IdMedRecord;
           } 
           set
           {
              if(_IdMedRecord != value)
              {
                _IdMedRecord = value;
                RaisePropertyChanged("IdMedRecord");
              }
           }
        }
     
    
        private MedRecord _MedRecord;
        public virtual MedRecord MedRecord 
        { 
          get
          {
              return _MedRecord;
          } 
          set
          {
             if(_MedRecord != value)
             {
                _MedRecord = value;
                RaisePropertyChanged("MedRecord");
             }
          }
        }
        public string Error => throw new NotImplementedException();

        public string this[string columnName]
        {
            get
            {
                string result = null;
                if (columnName == "Photo")
                {
                    if (Photo == null)
                        result = "Данная строка не может быть пустой";
                }
                if (columnName == "Date")
                {
                    if (Date == null)
                        result = "Данная строка не может быть пустой";
                }
                if (columnName == "Description")
                {
                    if (Description == "" || Description == null)
                        result = "Данная строка не может быть пустой";
                }
                return result;
            }
        }

        private Xrays _tempValues;
        public void BeginEdit()
        {
            _tempValues = new Xrays
            {
                Id = this.Id,
                Photo = this.Photo,
                Date = this.Date,
                Description = this.Description,
                IdMedRecord = this.IdMedRecord
            };
        }

        public void EndEdit()
        {
            _tempValues = null;
        }

        public void CancelEdit()
        {
            if (_tempValues == null) return;

            this.Id = _tempValues.Id;
            this.Photo = _tempValues.Photo;
            this.Date = _tempValues.Date;
            this.Description = _tempValues.Description;
            this.IdMedRecord = _tempValues.IdMedRecord;
        }

    }
}
