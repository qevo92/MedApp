//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MedApp.Models
{
    using System;
    using System.Collections.Generic;
    using Prism.Mvvm;
    using System.ComponentModel;
    public partial class Employee : BindableBase
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Employee()
        {
            this.Ticket = new HashSet<Ticket>();
            this.Timetable = new HashSet<Timetable>();
            this.Visiting = new HashSet<Visiting>();
        }
    
        private int  _Id;
        public int Id 
        { 
           get
           {
              return _Id;
           } 
           set
           {
              if(_Id != value)
              {
                _Id = value;
                RaisePropertyChanged("Id");
              }
           }
        }
     
        private string  _Surname;
        public string Surname 
        { 
           get
           {
              return _Surname;
           } 
           set
           {
              if(_Surname != value)
              {
                _Surname = value;
                RaisePropertyChanged("Surname");
              }
           }
        }
     
        private string  _Name;
        public string Name 
        { 
           get
           {
              return _Name;
           } 
           set
           {
              if(_Name != value)
              {
                _Name = value;
                RaisePropertyChanged("Name");
              }
           }
        }
     
        private string  _Patronymic;
        public string Patronymic 
        { 
           get
           {
              return _Patronymic;
           } 
           set
           {
              if(_Patronymic != value)
              {
                _Patronymic = value;
                RaisePropertyChanged("Patronymic");
              }
           }
        }
     
        private System.DateTime  _Birthday;
        public System.DateTime Birthday 
        { 
           get
           {
              return _Birthday;
           } 
           set
           {
              if(_Birthday != value)
              {
                _Birthday = value;
                RaisePropertyChanged("Birthday");
              }
           }
        }
     
        private string  _Country;
        public string Country 
        { 
           get
           {
              return _Country;
           } 
           set
           {
              if(_Country != value)
              {
                _Country = value;
                RaisePropertyChanged("Country");
              }
           }
        }
     
        private string  _City;
        public string City 
        { 
           get
           {
              return _City;
           } 
           set
           {
              if(_City != value)
              {
                _City = value;
                RaisePropertyChanged("City");
              }
           }
        }
     
        private string  _Street;
        public string Street 
        { 
           get
           {
              return _Street;
           } 
           set
           {
              if(_Street != value)
              {
                _Street = value;
                RaisePropertyChanged("Street");
              }
           }
        }
     
        private int  _Home;
        public int Home 
        { 
           get
           {
              return _Home;
           } 
           set
           {
              if(_Home != value)
              {
                _Home = value;
                RaisePropertyChanged("Home");
              }
           }
        }
     
        private Nullable<int>  _Housing;
        public Nullable<int> Housing 
        { 
           get
           {
              return _Housing;
           } 
           set
           {
              if(_Housing != value)
              {
                _Housing = value;
                RaisePropertyChanged("Housing");
              }
           }
        }
     
        private int  _Houseroom;
        public int Houseroom 
        { 
           get
           {
              return _Houseroom;
           } 
           set
           {
              if(_Houseroom != value)
              {
                _Houseroom = value;
                RaisePropertyChanged("Houseroom");
              }
           }
        }
     
        private string  _Phone;
        public string Phone 
        { 
           get
           {
              return _Phone;
           } 
           set
           {
              if(_Phone != value)
              {
                _Phone = value;
                RaisePropertyChanged("Phone");
              }
           }
        }
     
        private string  _Passport;
        public string Passport 
        { 
           get
           {
              return _Passport;
           } 
           set
           {
              if(_Passport != value)
              {
                _Passport = value;
                RaisePropertyChanged("Passport");
              }
           }
        }
     
        private string  _Login;
        public string Login 
        { 
           get
           {
              return _Login;
           } 
           set
           {
              if(_Login != value)
              {
                _Login = value;
                RaisePropertyChanged("Login");
              }
           }
        }
     
        private string  _Password;
        public string Password 
        { 
           get
           {
              return _Password;
           } 
           set
           {
              if(_Password != value)
              {
                _Password = value;
                RaisePropertyChanged("Password");
              }
           }
        }
     
        private int  _IDPost;
        public int IDPost 
        { 
           get
           {
              return _IDPost;
           } 
           set
           {
              if(_IDPost != value)
              {
                _IDPost = value;
                RaisePropertyChanged("IDPost");
              }
           }
        }
     
        private string  _Sector;
        public string Sector 
        { 
           get
           {
              return _Sector;
           } 
           set
           {
              if(_Sector != value)
              {
                _Sector = value;
                RaisePropertyChanged("Sector");
              }
           }
        }
     
        private Nullable<int>  _Cabinet;
        public Nullable<int> Cabinet 
        { 
           get
           {
              return _Cabinet;
           } 
           set
           {
              if(_Cabinet != value)
              {
                _Cabinet = value;
                RaisePropertyChanged("Cabinet");
              }
           }
        }
     
    
        private Post _Post;
        public virtual Post Post 
        { 
          get
          {
              return _Post;
          } 
          set
          {
             if(_Post != value)
             {
                _Post = value;
                RaisePropertyChanged("Post");
             }
          }
        }
     
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<Ticket> _Ticket;
        public virtual ICollection<Ticket> Ticket 
        { 
          get
          {
              return _Ticket;
          } 
          set
          {
             if(_Ticket != value)
             {
                _Ticket = value;
                RaisePropertyChanged("Ticket");
             }
          }
        }
     
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<Timetable> _Timetable;
        public virtual ICollection<Timetable> Timetable 
        { 
          get
          {
              return _Timetable;
          } 
          set
          {
             if(_Timetable != value)
             {
                _Timetable = value;
                RaisePropertyChanged("Timetable");
             }
          }
        }
     
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        private ICollection<Visiting> _Visiting;
        public virtual ICollection<Visiting> Visiting 
        { 
          get
          {
              return _Visiting;
          } 
          set
          {
             if(_Visiting != value)
             {
                _Visiting = value;
                RaisePropertyChanged("Visiting");
             }
          }
        }
     
    }
}
